syntax = "proto3";

package nodeum.micro.v1;

option go_package = "github.com/nodeum-io/nodeum-proto/nodeum/micro/v1;microv1";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";

service LicenseService {
  // ShowLicense shows details about the current license
  rpc ShowLicense(ShowLicenseRequest) returns (ShowLicenseResponse) {
    option (google.api.http) = {
      get: "/license";
    };
  }

  // UpdateLicense updates the current license
  rpc UpdateLicense(UpdateLicenseRequest) returns (UpdateLicenseResponse) {
    option (google.api.http) = {
      put: "/license";
      body: "*";
    };
  }
}

message License {
  // Optional error when validating license
  string error = 1;
  // Issuer of the license (ie. Nodeum)
  string issuer = 2;
  // Name of receiver of the license
  string subject = 3;
  // List of Product UUID
  repeated string audience = 4;
  // Expiration date
  google.protobuf.Timestamp expires_at = 5;
  // Not before date
  google.protobuf.Timestamp not_before = 6;
  // When the license was issued
  google.protobuf.Timestamp issued_at = 7;
  // Maintenance date
  google.protobuf.Timestamp maintenance = 9;
  // Version constraint, in semver format
  string semver = 8;
}

message ShowLicenseRequest {}
message ShowLicenseResponse {
  License license = 1;
}

message UpdateLicenseRequest {
  string license = 1;
}
message UpdateLicenseResponse {
  License license = 1;
}
