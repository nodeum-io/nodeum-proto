syntax = "proto3";

package nodeum.micro.v1;

option go_package = "github.com/nodeum-io/nodeum-proto/nodeum/micro/v1;microv1";

import "google/api/annotations.proto";

service DebugService {
	rpc Info(InfoRequest) returns (InfoResponse) {};
	rpc Stats(StatsRequest) returns (StatsResponse) {};
}

service MonitoringService {
  // ListServices returns all registered services.
  rpc ListServices(ListServicesRequest) returns (ListServicesResponse) {
    option (google.api.http) = {
      get: "/services";
    };
  }
	rpc ListHosts(ListHostsRequest) returns (ListHostsResponse) {
    option (google.api.http) = {
      get: "/hosts";
    };
	}
}

message InfoRequest { }
message InfoResponse {
	string uuid = 1;
	string hostname = 2;
	string ip = 3;
	int64 memory = 4;
	int32 cpus = 5;
}

message StatsRequest {
  // optional service name
  string service = 1;
}
message StatsResponse {
	// timestamp of recording
	int64 timestamp = 1;
	// unix timestamp
	int64 started = 2;
	// in seconds
	int64 uptime = 3;
	// in bytes
	int64 memory = 4;
	// num threads
	int64 threads = 5;
	// total gc in nanoseconds
	int64 gc = 6;
	// total number of requests
	int64 requests = 7;
	// total number of errors
	int64 errors = 8;
}

message Service {
	message Node {
		string id = 1;
		string address = 2;
		StatsResponse stats = 3;
	
		enum Status {
			STATUS_UNSPECIFIED = 0;
			STATUS_ALIVE = 1;
			STATUS_DEAD = 2;
		}
		Status status = 4;
	}

  string name = 1;
  string version = 2;
  repeated Node nodes = 3;
}

message ListServicesRequest {}
message ListServicesResponse {
  repeated Service services = 1;
}

message ListHostsRequest {}
message ListHostsResponse {
	repeated InfoResponse hosts = 1;
}
