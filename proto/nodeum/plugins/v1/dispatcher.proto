syntax = "proto3";

package nodeum.plugins.v1;

option go_package = "github.com/nodeum-io/nodeum-proto/nodeum/plugins/v1;pluginsv1";

import "google/protobuf/struct.proto";
import "nodeum/common/v1/request.proto";
import "nodeum/common/v1/result.proto";
import "nodeum/common/v1/task.proto";

service DispatcherPluginService {
  // Before the task is started, you can change the task and/or the trigger metadata
  rpc BeforeTaskExecuted(BeforeTaskExecutedRequest) returns (BeforeTaskExecutedResponse);
  // Before a request is dispatched, you can change it or discard it
  rpc BeforeRequestDispatched(BeforeRequestDispatchedRequest) returns (BeforeRequestDispatchedResponse);
  // After a result has been received and before it's being handled by finalizer.
  // Progress results are excluded.
  rpc AfterResultReceived(AfterResultReceivedRequest) returns (AfterResultReceivedResponse);
  // After the task has been executed
  rpc AfterTaskExecuted(AfterTaskExecutedRequest) returns (AfterTaskExecutedResponse);
}

message BeforeTaskExecutedRequest {
  nodeum.common.v1.Task task = 1;
  google.protobuf.Struct metadata = 3;
}
message BeforeTaskExecutedResponse {
  nodeum.common.v1.Task task = 1;
  google.protobuf.Struct metadata = 3;
}

message BeforeRequestDispatchedRequest {
  nodeum.common.v1.Execution execution = 1;
  nodeum.common.v1.Request request = 2;
}
message BeforeRequestDispatchedResponse {
  nodeum.common.v1.Request request = 2;
  bool discard = 3;
}

message AfterResultReceivedRequest {
  nodeum.common.v1.Execution execution = 1;
  nodeum.common.v1.Result result = 2;
}
message AfterResultReceivedResponse {
}

message AfterTaskExecutedRequest {
  nodeum.common.v1.Execution execution = 1;
}
message AfterTaskExecutedResponse {
}
