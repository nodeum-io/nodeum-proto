// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: nodeum/common/v1/task.proto

package commonv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Task_Type int32

const (
	Task_TYPE_UNSPECIFIED     Task_Type = 0
	Task_TYPE_ACTIVE_ARCHIVE  Task_Type = 1
	Task_TYPE_OFFLINE_ARCHIVE Task_Type = 2
	Task_TYPE_DATA_EXCHANGE   Task_Type = 3
	Task_TYPE_DATA_MIGRATION  Task_Type = 6
)

// Enum value maps for Task_Type.
var (
	Task_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_ACTIVE_ARCHIVE",
		2: "TYPE_OFFLINE_ARCHIVE",
		3: "TYPE_DATA_EXCHANGE",
		6: "TYPE_DATA_MIGRATION",
	}
	Task_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":     0,
		"TYPE_ACTIVE_ARCHIVE":  1,
		"TYPE_OFFLINE_ARCHIVE": 2,
		"TYPE_DATA_EXCHANGE":   3,
		"TYPE_DATA_MIGRATION":  6,
	}
)

func (x Task_Type) Enum() *Task_Type {
	p := new(Task_Type)
	*p = x
	return p
}

func (x Task_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_nodeum_common_v1_task_proto_enumTypes[0].Descriptor()
}

func (Task_Type) Type() protoreflect.EnumType {
	return &file_nodeum_common_v1_task_proto_enumTypes[0]
}

func (x Task_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_Type.Descriptor instead.
func (Task_Type) EnumDescriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{1, 0}
}

type Task_Action int32

const (
	Task_ACTION_UNSPECIFIED Task_Action = 0
	Task_ACTION_COPY        Task_Action = 1
	Task_ACTION_MOVE        Task_Action = 2
)

// Enum value maps for Task_Action.
var (
	Task_Action_name = map[int32]string{
		0: "ACTION_UNSPECIFIED",
		1: "ACTION_COPY",
		2: "ACTION_MOVE",
	}
	Task_Action_value = map[string]int32{
		"ACTION_UNSPECIFIED": 0,
		"ACTION_COPY":        1,
		"ACTION_MOVE":        2,
	}
)

func (x Task_Action) Enum() *Task_Action {
	p := new(Task_Action)
	*p = x
	return p
}

func (x Task_Action) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_Action) Descriptor() protoreflect.EnumDescriptor {
	return file_nodeum_common_v1_task_proto_enumTypes[1].Descriptor()
}

func (Task_Action) Type() protoreflect.EnumType {
	return &file_nodeum_common_v1_task_proto_enumTypes[1]
}

func (x Task_Action) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_Action.Descriptor instead.
func (Task_Action) EnumDescriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{1, 1}
}

type Task_Source_Type int32

const (
	Task_Source_TYPE_UNSPECIFIED     Task_Source_Type = 0
	Task_Source_TYPE_CONTAINER       Task_Source_Type = 1
	Task_Source_TYPE_PRIMARY_NAS     Task_Source_Type = 2
	Task_Source_TYPE_SECONDARY_NAS   Task_Source_Type = 3
	Task_Source_TYPE_PRIMARY_CLOUD   Task_Source_Type = 4
	Task_Source_TYPE_SECONDARY_CLOUD Task_Source_Type = 5
	Task_Source_TYPE_PRIMARY_TAPE    Task_Source_Type = 6
	Task_Source_TYPE_SECONDARY_TAPE  Task_Source_Type = 7
	Task_Source_TYPE_NAS             Task_Source_Type = 8
	Task_Source_TYPE_CLOUD           Task_Source_Type = 9
	Task_Source_TYPE_TAPE            Task_Source_Type = 10
)

// Enum value maps for Task_Source_Type.
var (
	Task_Source_Type_name = map[int32]string{
		0:  "TYPE_UNSPECIFIED",
		1:  "TYPE_CONTAINER",
		2:  "TYPE_PRIMARY_NAS",
		3:  "TYPE_SECONDARY_NAS",
		4:  "TYPE_PRIMARY_CLOUD",
		5:  "TYPE_SECONDARY_CLOUD",
		6:  "TYPE_PRIMARY_TAPE",
		7:  "TYPE_SECONDARY_TAPE",
		8:  "TYPE_NAS",
		9:  "TYPE_CLOUD",
		10: "TYPE_TAPE",
	}
	Task_Source_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":     0,
		"TYPE_CONTAINER":       1,
		"TYPE_PRIMARY_NAS":     2,
		"TYPE_SECONDARY_NAS":   3,
		"TYPE_PRIMARY_CLOUD":   4,
		"TYPE_SECONDARY_CLOUD": 5,
		"TYPE_PRIMARY_TAPE":    6,
		"TYPE_SECONDARY_TAPE":  7,
		"TYPE_NAS":             8,
		"TYPE_CLOUD":           9,
		"TYPE_TAPE":            10,
	}
)

func (x Task_Source_Type) Enum() *Task_Source_Type {
	p := new(Task_Source_Type)
	*p = x
	return p
}

func (x Task_Source_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_Source_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_nodeum_common_v1_task_proto_enumTypes[2].Descriptor()
}

func (Task_Source_Type) Type() protoreflect.EnumType {
	return &file_nodeum_common_v1_task_proto_enumTypes[2]
}

func (x Task_Source_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_Source_Type.Descriptor instead.
func (Task_Source_Type) EnumDescriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{1, 0, 0}
}

type Task_Callback_Type int32

const (
	Task_Callback_TYPE_UNSPECIFIED           Task_Callback_Type = 0
	Task_Callback_TYPE_FILTER                Task_Callback_Type = 1
	Task_Callback_TYPE_AFTER_RESULT_RECEIVED Task_Callback_Type = 2
	Task_Callback_TYPE_BEFORE_TASK_EXECUTED  Task_Callback_Type = 3
	Task_Callback_TYPE_AFTER_TASK_EXECUTED   Task_Callback_Type = 4
)

// Enum value maps for Task_Callback_Type.
var (
	Task_Callback_Type_name = map[int32]string{
		0: "TYPE_UNSPECIFIED",
		1: "TYPE_FILTER",
		2: "TYPE_AFTER_RESULT_RECEIVED",
		3: "TYPE_BEFORE_TASK_EXECUTED",
		4: "TYPE_AFTER_TASK_EXECUTED",
	}
	Task_Callback_Type_value = map[string]int32{
		"TYPE_UNSPECIFIED":           0,
		"TYPE_FILTER":                1,
		"TYPE_AFTER_RESULT_RECEIVED": 2,
		"TYPE_BEFORE_TASK_EXECUTED":  3,
		"TYPE_AFTER_TASK_EXECUTED":   4,
	}
)

func (x Task_Callback_Type) Enum() *Task_Callback_Type {
	p := new(Task_Callback_Type)
	*p = x
	return p
}

func (x Task_Callback_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_Callback_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_nodeum_common_v1_task_proto_enumTypes[3].Descriptor()
}

func (Task_Callback_Type) Type() protoreflect.EnumType {
	return &file_nodeum_common_v1_task_proto_enumTypes[3]
}

func (x Task_Callback_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_Callback_Type.Descriptor instead.
func (Task_Callback_Type) EnumDescriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{1, 1, 0}
}

type Task_Callback_Language int32

const (
	Task_Callback_LANGUAGE_UNSPECIFIED Task_Callback_Language = 0
	Task_Callback_LANGUAGE_JAVASCRIPT  Task_Callback_Language = 1
	Task_Callback_LANGUAGE_PYTHON      Task_Callback_Language = 2
)

// Enum value maps for Task_Callback_Language.
var (
	Task_Callback_Language_name = map[int32]string{
		0: "LANGUAGE_UNSPECIFIED",
		1: "LANGUAGE_JAVASCRIPT",
		2: "LANGUAGE_PYTHON",
	}
	Task_Callback_Language_value = map[string]int32{
		"LANGUAGE_UNSPECIFIED": 0,
		"LANGUAGE_JAVASCRIPT":  1,
		"LANGUAGE_PYTHON":      2,
	}
)

func (x Task_Callback_Language) Enum() *Task_Callback_Language {
	p := new(Task_Callback_Language)
	*p = x
	return p
}

func (x Task_Callback_Language) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Task_Callback_Language) Descriptor() protoreflect.EnumDescriptor {
	return file_nodeum_common_v1_task_proto_enumTypes[4].Descriptor()
}

func (Task_Callback_Language) Type() protoreflect.EnumType {
	return &file_nodeum_common_v1_task_proto_enumTypes[4]
}

func (x Task_Callback_Language) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Task_Callback_Language.Descriptor instead.
func (Task_Callback_Language) EnumDescriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{1, 1, 1}
}

type Execution_Progress int32

const (
	Execution_PROGRESS_UNSPECIFIED     Execution_Progress = 0
	Execution_PROGRESS_INIT_STARTED    Execution_Progress = 1
	Execution_PROGRESS_INIT_DONE       Execution_Progress = 2
	Execution_PROGRESS_PROCESS_STARTED Execution_Progress = 4
	Execution_PROGRESS_PROCESS_DONE    Execution_Progress = 8
	Execution_PROGRESS_FINAL_STARTED   Execution_Progress = 16
	Execution_PROGRESS_FINAL_DONE      Execution_Progress = 32
	Execution_PROGRESS_HAS_ERROR       Execution_Progress = 64
	Execution_PROGRESS_STOPPED         Execution_Progress = 128
	Execution_PROGRESS_STOPPED_BY_USER Execution_Progress = 256
	Execution_PROGRESS_PAUSED          Execution_Progress = 512
)

// Enum value maps for Execution_Progress.
var (
	Execution_Progress_name = map[int32]string{
		0:   "PROGRESS_UNSPECIFIED",
		1:   "PROGRESS_INIT_STARTED",
		2:   "PROGRESS_INIT_DONE",
		4:   "PROGRESS_PROCESS_STARTED",
		8:   "PROGRESS_PROCESS_DONE",
		16:  "PROGRESS_FINAL_STARTED",
		32:  "PROGRESS_FINAL_DONE",
		64:  "PROGRESS_HAS_ERROR",
		128: "PROGRESS_STOPPED",
		256: "PROGRESS_STOPPED_BY_USER",
		512: "PROGRESS_PAUSED",
	}
	Execution_Progress_value = map[string]int32{
		"PROGRESS_UNSPECIFIED":     0,
		"PROGRESS_INIT_STARTED":    1,
		"PROGRESS_INIT_DONE":       2,
		"PROGRESS_PROCESS_STARTED": 4,
		"PROGRESS_PROCESS_DONE":    8,
		"PROGRESS_FINAL_STARTED":   16,
		"PROGRESS_FINAL_DONE":      32,
		"PROGRESS_HAS_ERROR":       64,
		"PROGRESS_STOPPED":         128,
		"PROGRESS_STOPPED_BY_USER": 256,
		"PROGRESS_PAUSED":          512,
	}
)

func (x Execution_Progress) Enum() *Execution_Progress {
	p := new(Execution_Progress)
	*p = x
	return p
}

func (x Execution_Progress) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Execution_Progress) Descriptor() protoreflect.EnumDescriptor {
	return file_nodeum_common_v1_task_proto_enumTypes[5].Descriptor()
}

func (Execution_Progress) Type() protoreflect.EnumType {
	return &file_nodeum_common_v1_task_proto_enumTypes[5]
}

func (x Execution_Progress) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Execution_Progress.Descriptor instead.
func (Execution_Progress) EnumDescriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{2, 0}
}

type Metadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Files   map[string]string `protobuf:"bytes,1,rep,name=files,proto3" json:"files,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Task    *structpb.Struct  `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Trigger *structpb.Struct  `protobuf:"bytes,3,opt,name=trigger,proto3" json:"trigger,omitempty"`
}

func (x *Metadata) Reset() {
	*x = Metadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeum_common_v1_task_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Metadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Metadata) ProtoMessage() {}

func (x *Metadata) ProtoReflect() protoreflect.Message {
	mi := &file_nodeum_common_v1_task_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Metadata.ProtoReflect.Descriptor instead.
func (*Metadata) Descriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{0}
}

func (x *Metadata) GetFiles() map[string]string {
	if x != nil {
		return x.Files
	}
	return nil
}

func (x *Metadata) GetTask() *structpb.Struct {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *Metadata) GetTrigger() *structpb.Struct {
	if x != nil {
		return x.Trigger
	}
	return nil
}

type Task struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Type          Task_Type              `protobuf:"varint,3,opt,name=type,proto3,enum=nodeum.common.v1.Task_Type" json:"type,omitempty"`
	Action        Task_Action            `protobuf:"varint,4,opt,name=action,proto3,enum=nodeum.common.v1.Task_Action" json:"action,omitempty"`
	Sources       []*Task_Source         `protobuf:"bytes,5,rep,name=sources,proto3" json:"sources,omitempty"`
	Destinations  []*Task_Source         `protobuf:"bytes,6,rep,name=destinations,proto3" json:"destinations,omitempty"`
	Options       *structpb.Struct       `protobuf:"bytes,7,opt,name=options,proto3" json:"options,omitempty"`
	Metadata      *Metadata              `protobuf:"bytes,8,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Callbacks     []*Task_Callback       `protobuf:"bytes,9,rep,name=callbacks,proto3" json:"callbacks,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,12,opt,name=updated_at,proto3" json:"updated_at,omitempty"`
	CreatedBy     string                 `protobuf:"bytes,13,opt,name=created_by,proto3" json:"created_by,omitempty"`
	UpdatedBy     string                 `protobuf:"bytes,14,opt,name=updated_by,proto3" json:"updated_by,omitempty"`
	LastExecution *Execution             `protobuf:"bytes,15,opt,name=last_execution,proto3" json:"last_execution,omitempty"`
}

func (x *Task) Reset() {
	*x = Task{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeum_common_v1_task_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task) ProtoMessage() {}

func (x *Task) ProtoReflect() protoreflect.Message {
	mi := &file_nodeum_common_v1_task_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task.ProtoReflect.Descriptor instead.
func (*Task) Descriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{1}
}

func (x *Task) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Task) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Task) GetType() Task_Type {
	if x != nil {
		return x.Type
	}
	return Task_TYPE_UNSPECIFIED
}

func (x *Task) GetAction() Task_Action {
	if x != nil {
		return x.Action
	}
	return Task_ACTION_UNSPECIFIED
}

func (x *Task) GetSources() []*Task_Source {
	if x != nil {
		return x.Sources
	}
	return nil
}

func (x *Task) GetDestinations() []*Task_Source {
	if x != nil {
		return x.Destinations
	}
	return nil
}

func (x *Task) GetOptions() *structpb.Struct {
	if x != nil {
		return x.Options
	}
	return nil
}

func (x *Task) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Task) GetCallbacks() []*Task_Callback {
	if x != nil {
		return x.Callbacks
	}
	return nil
}

func (x *Task) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Task) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *Task) GetUpdatedBy() string {
	if x != nil {
		return x.UpdatedBy
	}
	return ""
}

func (x *Task) GetLastExecution() *Execution {
	if x != nil {
		return x.LastExecution
	}
	return nil
}

type Execution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id         string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Task       *Task                  `protobuf:"bytes,2,opt,name=task,proto3" json:"task,omitempty"`
	Metadata   *Metadata              `protobuf:"bytes,3,opt,name=metadata,proto3" json:"metadata,omitempty"`
	Progress   uint32                 `protobuf:"varint,4,opt,name=progress,proto3" json:"progress,omitempty"`
	SizeDone   int64                  `protobuf:"varint,5,opt,name=size_done,proto3" json:"size_done,omitempty"`
	SizeTodo   int64                  `protobuf:"varint,6,opt,name=size_todo,proto3" json:"size_todo,omitempty"`
	NodesDone  int32                  `protobuf:"varint,7,opt,name=nodes_done,proto3" json:"nodes_done,omitempty"`
	NodesTodo  int32                  `protobuf:"varint,8,opt,name=nodes_todo,proto3" json:"nodes_todo,omitempty"`
	FinishedAt *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=finished_at,proto3" json:"finished_at,omitempty"`
}

func (x *Execution) Reset() {
	*x = Execution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeum_common_v1_task_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Execution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Execution) ProtoMessage() {}

func (x *Execution) ProtoReflect() protoreflect.Message {
	mi := &file_nodeum_common_v1_task_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Execution.ProtoReflect.Descriptor instead.
func (*Execution) Descriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{2}
}

func (x *Execution) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Execution) GetTask() *Task {
	if x != nil {
		return x.Task
	}
	return nil
}

func (x *Execution) GetMetadata() *Metadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Execution) GetProgress() uint32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *Execution) GetSizeDone() int64 {
	if x != nil {
		return x.SizeDone
	}
	return 0
}

func (x *Execution) GetSizeTodo() int64 {
	if x != nil {
		return x.SizeTodo
	}
	return 0
}

func (x *Execution) GetNodesDone() int32 {
	if x != nil {
		return x.NodesDone
	}
	return 0
}

func (x *Execution) GetNodesTodo() int32 {
	if x != nil {
		return x.NodesTodo
	}
	return 0
}

func (x *Execution) GetFinishedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishedAt
	}
	return nil
}

type Task_Source struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type            Task_Source_Type `protobuf:"varint,1,opt,name=type,proto3,enum=nodeum.common.v1.Task_Source_Type" json:"type,omitempty"`
	NodePaths       []string         `protobuf:"bytes,2,rep,name=node_paths,proto3" json:"node_paths,omitempty"`
	NodeIds         []string         `protobuf:"bytes,3,rep,name=node_ids,proto3" json:"node_ids,omitempty"`
	PoolId          uint64           `protobuf:"varint,4,opt,name=pool_id,proto3" json:"pool_id,omitempty"`
	StorageId       uint64           `protobuf:"varint,5,opt,name=storage_id,proto3" json:"storage_id,omitempty"`
	ParentStorageId uint64           `protobuf:"varint,16,opt,name=parent_storage_id,proto3" json:"parent_storage_id,omitempty"`
	StorageName     string           `protobuf:"bytes,17,opt,name=storage_name,proto3" json:"storage_name,omitempty"`
}

func (x *Task_Source) Reset() {
	*x = Task_Source{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeum_common_v1_task_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_Source) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Source) ProtoMessage() {}

func (x *Task_Source) ProtoReflect() protoreflect.Message {
	mi := &file_nodeum_common_v1_task_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Source.ProtoReflect.Descriptor instead.
func (*Task_Source) Descriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{1, 0}
}

func (x *Task_Source) GetType() Task_Source_Type {
	if x != nil {
		return x.Type
	}
	return Task_Source_TYPE_UNSPECIFIED
}

func (x *Task_Source) GetNodePaths() []string {
	if x != nil {
		return x.NodePaths
	}
	return nil
}

func (x *Task_Source) GetNodeIds() []string {
	if x != nil {
		return x.NodeIds
	}
	return nil
}

func (x *Task_Source) GetPoolId() uint64 {
	if x != nil {
		return x.PoolId
	}
	return 0
}

func (x *Task_Source) GetStorageId() uint64 {
	if x != nil {
		return x.StorageId
	}
	return 0
}

func (x *Task_Source) GetParentStorageId() uint64 {
	if x != nil {
		return x.ParentStorageId
	}
	return 0
}

func (x *Task_Source) GetStorageName() string {
	if x != nil {
		return x.StorageName
	}
	return ""
}

type Task_Callback struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     Task_Callback_Type     `protobuf:"varint,1,opt,name=type,proto3,enum=nodeum.common.v1.Task_Callback_Type" json:"type,omitempty"`
	Language Task_Callback_Language `protobuf:"varint,2,opt,name=language,proto3,enum=nodeum.common.v1.Task_Callback_Language" json:"language,omitempty"`
	Script   string                 `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
}

func (x *Task_Callback) Reset() {
	*x = Task_Callback{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeum_common_v1_task_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Task_Callback) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Task_Callback) ProtoMessage() {}

func (x *Task_Callback) ProtoReflect() protoreflect.Message {
	mi := &file_nodeum_common_v1_task_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Task_Callback.ProtoReflect.Descriptor instead.
func (*Task_Callback) Descriptor() ([]byte, []int) {
	return file_nodeum_common_v1_task_proto_rawDescGZIP(), []int{1, 1}
}

func (x *Task_Callback) GetType() Task_Callback_Type {
	if x != nil {
		return x.Type
	}
	return Task_Callback_TYPE_UNSPECIFIED
}

func (x *Task_Callback) GetLanguage() Task_Callback_Language {
	if x != nil {
		return x.Language
	}
	return Task_Callback_LANGUAGE_UNSPECIFIED
}

func (x *Task_Callback) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

var File_nodeum_common_v1_task_proto protoreflect.FileDescriptor

var file_nodeum_common_v1_task_proto_rawDesc = []byte{
	0x0a, 0x1b, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f,
	0x76, 0x31, 0x2f, 0x74, 0x61, 0x73, 0x6b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x10, 0x6e,
	0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x1a,
	0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2f, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xe1,
	0x01, 0x0a, 0x08, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3b, 0x0a, 0x05, 0x66,
	0x69, 0x6c, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x6e, 0x6f, 0x64,
	0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x05, 0x66, 0x69, 0x6c, 0x65, 0x73, 0x12, 0x2b, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x04, 0x74, 0x61, 0x73, 0x6b, 0x12, 0x31, 0x0a, 0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52,
	0x07, 0x74, 0x72, 0x69, 0x67, 0x67, 0x65, 0x72, 0x1a, 0x38, 0x0a, 0x0a, 0x46, 0x69, 0x6c, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02,
	0x38, 0x01, 0x22, 0xc1, 0x0d, 0x0a, 0x04, 0x54, 0x61, 0x73, 0x6b, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x2f, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e,
	0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31,
	0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x35, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x1d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x06, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x37, 0x0a, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75,
	0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b,
	0x2e, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x07, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73,
	0x12, 0x41, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e,
	0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x53,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x52, 0x0c, 0x64, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x12, 0x31, 0x0a, 0x07, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x53, 0x74, 0x72, 0x75, 0x63, 0x74, 0x52, 0x07, 0x6f,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61,
	0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75,
	0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61,
	0x64, 0x61, 0x74, 0x61, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3d,
	0x0a, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1f, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x09, 0x63, 0x61, 0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x73, 0x12, 0x3a, 0x0a,
	0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x79, 0x12, 0x43, 0x0a, 0x0e, 0x6c, 0x61, 0x73,
	0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1b, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e,
	0x6c, 0x61, 0x73, 0x74, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x1a, 0xf8,
	0x03, 0x0a, 0x06, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x22, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e,
	0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x70, 0x61, 0x74, 0x68,
	0x73, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x6f, 0x64, 0x65, 0x5f, 0x69, 0x64, 0x73, 0x12, 0x18, 0x0a,
	0x07, 0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x07,
	0x70, 0x6f, 0x6f, 0x6c, 0x5f, 0x69, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x10, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x11, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x74, 0x6f, 0x72, 0x61,
	0x67, 0x65, 0x5f, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x74, 0x6f, 0x72, 0x61, 0x67, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x74, 0x6f,
	0x72, 0x61, 0x67, 0x65, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0xed, 0x01, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45,
	0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x12, 0x0a, 0x0e, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x54, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x4e, 0x41, 0x53,
	0x10, 0x02, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e,
	0x44, 0x41, 0x52, 0x59, 0x5f, 0x4e, 0x41, 0x53, 0x10, 0x03, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44,
	0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x4f, 0x4e,
	0x44, 0x41, 0x52, 0x59, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x05, 0x12, 0x15, 0x0a, 0x11,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x49, 0x4d, 0x41, 0x52, 0x59, 0x5f, 0x54, 0x41, 0x50,
	0x45, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x43, 0x4f,
	0x4e, 0x44, 0x41, 0x52, 0x59, 0x5f, 0x54, 0x41, 0x50, 0x45, 0x10, 0x07, 0x12, 0x0c, 0x0a, 0x08,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x41, 0x53, 0x10, 0x08, 0x12, 0x0e, 0x0a, 0x0a, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x43, 0x4c, 0x4f, 0x55, 0x44, 0x10, 0x09, 0x12, 0x0d, 0x0a, 0x09, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x54, 0x41, 0x50, 0x45, 0x10, 0x0a, 0x1a, 0x83, 0x03, 0x0a, 0x08, 0x43, 0x61,
	0x6c, 0x6c, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x38, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x24, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x43, 0x61, 0x6c,
	0x6c, 0x62, 0x61, 0x63, 0x6b, 0x2e, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x44, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x28, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x2e, 0x43, 0x61, 0x6c, 0x6c, 0x62,
	0x61, 0x63, 0x6b, 0x2e, 0x4c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x61,
	0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x22, 0x8a,
	0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a,
	0x0b, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x4c, 0x54, 0x45, 0x52, 0x10, 0x01, 0x12, 0x1e,
	0x0a, 0x1a, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x46, 0x54, 0x45, 0x52, 0x5f, 0x52, 0x45, 0x53,
	0x55, 0x4c, 0x54, 0x5f, 0x52, 0x45, 0x43, 0x45, 0x49, 0x56, 0x45, 0x44, 0x10, 0x02, 0x12, 0x1d,
	0x0a, 0x19, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x45, 0x46, 0x4f, 0x52, 0x45, 0x5f, 0x54, 0x41,
	0x53, 0x4b, 0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x44, 0x10, 0x03, 0x12, 0x1c, 0x0a,
	0x18, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x46, 0x54, 0x45, 0x52, 0x5f, 0x54, 0x41, 0x53, 0x4b,
	0x5f, 0x45, 0x58, 0x45, 0x43, 0x55, 0x54, 0x45, 0x44, 0x10, 0x04, 0x22, 0x52, 0x0a, 0x08, 0x4c,
	0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x4c, 0x41, 0x4e, 0x47, 0x55,
	0x41, 0x47, 0x45, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10,
	0x00, 0x12, 0x17, 0x0a, 0x13, 0x4c, 0x41, 0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x4a, 0x41,
	0x56, 0x41, 0x53, 0x43, 0x52, 0x49, 0x50, 0x54, 0x10, 0x01, 0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x41,
	0x4e, 0x47, 0x55, 0x41, 0x47, 0x45, 0x5f, 0x50, 0x59, 0x54, 0x48, 0x4f, 0x4e, 0x10, 0x02, 0x22,
	0x80, 0x01, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x10, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x17,
	0x0a, 0x13, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x41, 0x52,
	0x43, 0x48, 0x49, 0x56, 0x45, 0x10, 0x01, 0x12, 0x18, 0x0a, 0x14, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4f, 0x46, 0x46, 0x4c, 0x49, 0x4e, 0x45, 0x5f, 0x41, 0x52, 0x43, 0x48, 0x49, 0x56, 0x45, 0x10,
	0x02, 0x12, 0x16, 0x0a, 0x12, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x45,
	0x58, 0x43, 0x48, 0x41, 0x4e, 0x47, 0x45, 0x10, 0x03, 0x12, 0x17, 0x0a, 0x13, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x5f, 0x4d, 0x49, 0x47, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x10, 0x06, 0x22, 0x42, 0x0a, 0x06, 0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x12,
	0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46, 0x49,
	0x45, 0x44, 0x10, 0x00, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x43,
	0x4f, 0x50, 0x59, 0x10, 0x01, 0x12, 0x0f, 0x0a, 0x0b, 0x41, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f,
	0x4d, 0x4f, 0x56, 0x45, 0x10, 0x02, 0x22, 0x81, 0x05, 0x0a, 0x09, 0x45, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x02, 0x69, 0x64, 0x12, 0x2a, 0x0a, 0x04, 0x74, 0x61, 0x73, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x16, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x54, 0x61, 0x73, 0x6b, 0x52, 0x04, 0x74, 0x61, 0x73, 0x6b,
	0x12, 0x36, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x6f, 0x6e, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x08,
	0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x65, 0x73, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x64, 0x6f, 0x6e,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x64, 0x6f,
	0x6e, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x6f, 0x64, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x73, 0x69, 0x7a, 0x65, 0x5f, 0x74, 0x6f, 0x64, 0x6f,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x64, 0x6f, 0x6e, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x64, 0x6f, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x6f, 0x64, 0x65, 0x73, 0x5f, 0x74, 0x6f, 0x64, 0x6f,
	0x12, 0x3c, 0x0a, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x52, 0x0b, 0x66, 0x69, 0x6e, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x22, 0xa9,
	0x02, 0x0a, 0x08, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x14, 0x50,
	0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x55, 0x4e, 0x53, 0x50, 0x45, 0x43, 0x49, 0x46,
	0x49, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x01,
	0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x49, 0x4e, 0x49,
	0x54, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10, 0x02, 0x12, 0x1c, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x47,
	0x52, 0x45, 0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x41,
	0x52, 0x54, 0x45, 0x44, 0x10, 0x04, 0x12, 0x19, 0x0a, 0x15, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x5f, 0x50, 0x52, 0x4f, 0x43, 0x45, 0x53, 0x53, 0x5f, 0x44, 0x4f, 0x4e, 0x45, 0x10,
	0x08, 0x12, 0x1a, 0x0a, 0x16, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x46, 0x49,
	0x4e, 0x41, 0x4c, 0x5f, 0x53, 0x54, 0x41, 0x52, 0x54, 0x45, 0x44, 0x10, 0x10, 0x12, 0x17, 0x0a,
	0x13, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x46, 0x49, 0x4e, 0x41, 0x4c, 0x5f,
	0x44, 0x4f, 0x4e, 0x45, 0x10, 0x20, 0x12, 0x16, 0x0a, 0x12, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45,
	0x53, 0x53, 0x5f, 0x48, 0x41, 0x53, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x10, 0x40, 0x12, 0x15,
	0x0a, 0x10, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50,
	0x45, 0x44, 0x10, 0x80, 0x01, 0x12, 0x1d, 0x0a, 0x18, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53,
	0x53, 0x5f, 0x53, 0x54, 0x4f, 0x50, 0x50, 0x45, 0x44, 0x5f, 0x42, 0x59, 0x5f, 0x55, 0x53, 0x45,
	0x52, 0x10, 0x80, 0x02, 0x12, 0x14, 0x0a, 0x0f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x45, 0x53, 0x53,
	0x5f, 0x50, 0x41, 0x55, 0x53, 0x45, 0x44, 0x10, 0x80, 0x04, 0x42, 0x3d, 0x5a, 0x3b, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2d,
	0x69, 0x6f, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2f, 0x76, 0x31,
	0x3b, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_nodeum_common_v1_task_proto_rawDescOnce sync.Once
	file_nodeum_common_v1_task_proto_rawDescData = file_nodeum_common_v1_task_proto_rawDesc
)

func file_nodeum_common_v1_task_proto_rawDescGZIP() []byte {
	file_nodeum_common_v1_task_proto_rawDescOnce.Do(func() {
		file_nodeum_common_v1_task_proto_rawDescData = protoimpl.X.CompressGZIP(file_nodeum_common_v1_task_proto_rawDescData)
	})
	return file_nodeum_common_v1_task_proto_rawDescData
}

var file_nodeum_common_v1_task_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_nodeum_common_v1_task_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_nodeum_common_v1_task_proto_goTypes = []interface{}{
	(Task_Type)(0),                // 0: nodeum.common.v1.Task.Type
	(Task_Action)(0),              // 1: nodeum.common.v1.Task.Action
	(Task_Source_Type)(0),         // 2: nodeum.common.v1.Task.Source.Type
	(Task_Callback_Type)(0),       // 3: nodeum.common.v1.Task.Callback.Type
	(Task_Callback_Language)(0),   // 4: nodeum.common.v1.Task.Callback.Language
	(Execution_Progress)(0),       // 5: nodeum.common.v1.Execution.Progress
	(*Metadata)(nil),              // 6: nodeum.common.v1.Metadata
	(*Task)(nil),                  // 7: nodeum.common.v1.Task
	(*Execution)(nil),             // 8: nodeum.common.v1.Execution
	nil,                           // 9: nodeum.common.v1.Metadata.FilesEntry
	(*Task_Source)(nil),           // 10: nodeum.common.v1.Task.Source
	(*Task_Callback)(nil),         // 11: nodeum.common.v1.Task.Callback
	(*structpb.Struct)(nil),       // 12: google.protobuf.Struct
	(*timestamppb.Timestamp)(nil), // 13: google.protobuf.Timestamp
}
var file_nodeum_common_v1_task_proto_depIdxs = []int32{
	9,  // 0: nodeum.common.v1.Metadata.files:type_name -> nodeum.common.v1.Metadata.FilesEntry
	12, // 1: nodeum.common.v1.Metadata.task:type_name -> google.protobuf.Struct
	12, // 2: nodeum.common.v1.Metadata.trigger:type_name -> google.protobuf.Struct
	0,  // 3: nodeum.common.v1.Task.type:type_name -> nodeum.common.v1.Task.Type
	1,  // 4: nodeum.common.v1.Task.action:type_name -> nodeum.common.v1.Task.Action
	10, // 5: nodeum.common.v1.Task.sources:type_name -> nodeum.common.v1.Task.Source
	10, // 6: nodeum.common.v1.Task.destinations:type_name -> nodeum.common.v1.Task.Source
	12, // 7: nodeum.common.v1.Task.options:type_name -> google.protobuf.Struct
	6,  // 8: nodeum.common.v1.Task.metadata:type_name -> nodeum.common.v1.Metadata
	11, // 9: nodeum.common.v1.Task.callbacks:type_name -> nodeum.common.v1.Task.Callback
	13, // 10: nodeum.common.v1.Task.updated_at:type_name -> google.protobuf.Timestamp
	8,  // 11: nodeum.common.v1.Task.last_execution:type_name -> nodeum.common.v1.Execution
	7,  // 12: nodeum.common.v1.Execution.task:type_name -> nodeum.common.v1.Task
	6,  // 13: nodeum.common.v1.Execution.metadata:type_name -> nodeum.common.v1.Metadata
	13, // 14: nodeum.common.v1.Execution.finished_at:type_name -> google.protobuf.Timestamp
	2,  // 15: nodeum.common.v1.Task.Source.type:type_name -> nodeum.common.v1.Task.Source.Type
	3,  // 16: nodeum.common.v1.Task.Callback.type:type_name -> nodeum.common.v1.Task.Callback.Type
	4,  // 17: nodeum.common.v1.Task.Callback.language:type_name -> nodeum.common.v1.Task.Callback.Language
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_nodeum_common_v1_task_proto_init() }
func file_nodeum_common_v1_task_proto_init() {
	if File_nodeum_common_v1_task_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nodeum_common_v1_task_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Metadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeum_common_v1_task_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeum_common_v1_task_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Execution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeum_common_v1_task_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_Source); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeum_common_v1_task_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Task_Callback); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nodeum_common_v1_task_proto_rawDesc,
			NumEnums:      6,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_nodeum_common_v1_task_proto_goTypes,
		DependencyIndexes: file_nodeum_common_v1_task_proto_depIdxs,
		EnumInfos:         file_nodeum_common_v1_task_proto_enumTypes,
		MessageInfos:      file_nodeum_common_v1_task_proto_msgTypes,
	}.Build()
	File_nodeum_common_v1_task_proto = out.File
	file_nodeum_common_v1_task_proto_rawDesc = nil
	file_nodeum_common_v1_task_proto_goTypes = nil
	file_nodeum_common_v1_task_proto_depIdxs = nil
}
