// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.30.0
// 	protoc        (unknown)
// source: nodeum/micro/v1/license.proto

package microv1

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type License struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Error       string                 `protobuf:"bytes,1,opt,name=error,proto3" json:"error,omitempty"`
	Issuer      string                 `protobuf:"bytes,2,opt,name=issuer,proto3" json:"issuer,omitempty"`
	Subject     string                 `protobuf:"bytes,3,opt,name=subject,proto3" json:"subject,omitempty"`
	Audience    []string               `protobuf:"bytes,4,rep,name=audience,proto3" json:"audience,omitempty"`
	ExpiresAt   *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	NotBefore   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=not_before,json=notBefore,proto3" json:"not_before,omitempty"`
	IssuedAt    *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=issued_at,json=issuedAt,proto3" json:"issued_at,omitempty"`
	Maintenance *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=maintenance,proto3" json:"maintenance,omitempty"`
	Semver      string                 `protobuf:"bytes,8,opt,name=semver,proto3" json:"semver,omitempty"`
}

func (x *License) Reset() {
	*x = License{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeum_micro_v1_license_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *License) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*License) ProtoMessage() {}

func (x *License) ProtoReflect() protoreflect.Message {
	mi := &file_nodeum_micro_v1_license_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use License.ProtoReflect.Descriptor instead.
func (*License) Descriptor() ([]byte, []int) {
	return file_nodeum_micro_v1_license_proto_rawDescGZIP(), []int{0}
}

func (x *License) GetError() string {
	if x != nil {
		return x.Error
	}
	return ""
}

func (x *License) GetIssuer() string {
	if x != nil {
		return x.Issuer
	}
	return ""
}

func (x *License) GetSubject() string {
	if x != nil {
		return x.Subject
	}
	return ""
}

func (x *License) GetAudience() []string {
	if x != nil {
		return x.Audience
	}
	return nil
}

func (x *License) GetExpiresAt() *timestamppb.Timestamp {
	if x != nil {
		return x.ExpiresAt
	}
	return nil
}

func (x *License) GetNotBefore() *timestamppb.Timestamp {
	if x != nil {
		return x.NotBefore
	}
	return nil
}

func (x *License) GetIssuedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.IssuedAt
	}
	return nil
}

func (x *License) GetMaintenance() *timestamppb.Timestamp {
	if x != nil {
		return x.Maintenance
	}
	return nil
}

func (x *License) GetSemver() string {
	if x != nil {
		return x.Semver
	}
	return ""
}

type ShowLicenseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ShowLicenseRequest) Reset() {
	*x = ShowLicenseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeum_micro_v1_license_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowLicenseRequest) ProtoMessage() {}

func (x *ShowLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeum_micro_v1_license_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowLicenseRequest.ProtoReflect.Descriptor instead.
func (*ShowLicenseRequest) Descriptor() ([]byte, []int) {
	return file_nodeum_micro_v1_license_proto_rawDescGZIP(), []int{1}
}

type ShowLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	License *License `protobuf:"bytes,1,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *ShowLicenseResponse) Reset() {
	*x = ShowLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeum_micro_v1_license_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShowLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShowLicenseResponse) ProtoMessage() {}

func (x *ShowLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodeum_micro_v1_license_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShowLicenseResponse.ProtoReflect.Descriptor instead.
func (*ShowLicenseResponse) Descriptor() ([]byte, []int) {
	return file_nodeum_micro_v1_license_proto_rawDescGZIP(), []int{2}
}

func (x *ShowLicenseResponse) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

type UpdateLicenseRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	License string `protobuf:"bytes,1,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *UpdateLicenseRequest) Reset() {
	*x = UpdateLicenseRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeum_micro_v1_license_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLicenseRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLicenseRequest) ProtoMessage() {}

func (x *UpdateLicenseRequest) ProtoReflect() protoreflect.Message {
	mi := &file_nodeum_micro_v1_license_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLicenseRequest.ProtoReflect.Descriptor instead.
func (*UpdateLicenseRequest) Descriptor() ([]byte, []int) {
	return file_nodeum_micro_v1_license_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateLicenseRequest) GetLicense() string {
	if x != nil {
		return x.License
	}
	return ""
}

type UpdateLicenseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	License *License `protobuf:"bytes,1,opt,name=license,proto3" json:"license,omitempty"`
}

func (x *UpdateLicenseResponse) Reset() {
	*x = UpdateLicenseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_nodeum_micro_v1_license_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateLicenseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLicenseResponse) ProtoMessage() {}

func (x *UpdateLicenseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_nodeum_micro_v1_license_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLicenseResponse.ProtoReflect.Descriptor instead.
func (*UpdateLicenseResponse) Descriptor() ([]byte, []int) {
	return file_nodeum_micro_v1_license_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateLicenseResponse) GetLicense() *License {
	if x != nil {
		return x.License
	}
	return nil
}

var File_nodeum_micro_v1_license_proto protoreflect.FileDescriptor

var file_nodeum_micro_v1_license_proto_rawDesc = []byte{
	0x0a, 0x1d, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x76,
	0x31, 0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0f, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x76, 0x31,
	0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e,
	0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1f,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0xf2, 0x02, 0x0a, 0x07, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65,
	0x72, 0x72, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x06, 0x69, 0x73, 0x73, 0x75, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x18,
	0x04, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x61, 0x75, 0x64, 0x69, 0x65, 0x6e, 0x63, 0x65, 0x12,
	0x39, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x5f, 0x61, 0x74, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x65, 0x78, 0x70, 0x69, 0x72, 0x65, 0x73, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x6e, 0x6f,
	0x74, 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x6e, 0x6f, 0x74, 0x42,
	0x65, 0x66, 0x6f, 0x72, 0x65, 0x12, 0x37, 0x0a, 0x09, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x5f,
	0x61, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x52, 0x08, 0x69, 0x73, 0x73, 0x75, 0x65, 0x64, 0x41, 0x74, 0x12, 0x3c,
	0x0a, 0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x0b, 0x6d, 0x61, 0x69, 0x6e, 0x74, 0x65, 0x6e, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x16, 0x0a, 0x06,
	0x73, 0x65, 0x6d, 0x76, 0x65, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x65,
	0x6d, 0x76, 0x65, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x49, 0x0a, 0x13, 0x53, 0x68,
	0x6f, 0x77, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x32, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x6c, 0x69,
	0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x30, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x18, 0x0a,
	0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x22, 0x4b, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x32, 0x0a, 0x07, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f,
	0x2e, 0x76, 0x31, 0x2e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x07, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x32, 0xf1, 0x01, 0x0a, 0x0e, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65,
	0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x6a, 0x0a, 0x0b, 0x53, 0x68, 0x6f, 0x77, 0x4c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x6f, 0x77, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x24, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x75, 0x6d, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68,
	0x6f, 0x77, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x22, 0x10, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0a, 0x12, 0x08, 0x2f, 0x6c, 0x69, 0x63, 0x65,
	0x6e, 0x73, 0x65, 0x12, 0x73, 0x0a, 0x0d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x12, 0x25, 0x2e, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2e, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x6e, 0x6f,
	0x64, 0x65, 0x75, 0x6d, 0x2e, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x4c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x22, 0x13, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x0d, 0x3a, 0x01, 0x2a, 0x1a, 0x08,
	0x2f, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2d, 0x69, 0x6f,
	0x2f, 0x6e, 0x6f, 0x64, 0x65, 0x75, 0x6d, 0x2d, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6e, 0x6f,
	0x64, 0x65, 0x75, 0x6d, 0x2f, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x2f, 0x76, 0x31, 0x3b, 0x6d, 0x69,
	0x63, 0x72, 0x6f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_nodeum_micro_v1_license_proto_rawDescOnce sync.Once
	file_nodeum_micro_v1_license_proto_rawDescData = file_nodeum_micro_v1_license_proto_rawDesc
)

func file_nodeum_micro_v1_license_proto_rawDescGZIP() []byte {
	file_nodeum_micro_v1_license_proto_rawDescOnce.Do(func() {
		file_nodeum_micro_v1_license_proto_rawDescData = protoimpl.X.CompressGZIP(file_nodeum_micro_v1_license_proto_rawDescData)
	})
	return file_nodeum_micro_v1_license_proto_rawDescData
}

var file_nodeum_micro_v1_license_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_nodeum_micro_v1_license_proto_goTypes = []interface{}{
	(*License)(nil),               // 0: nodeum.micro.v1.License
	(*ShowLicenseRequest)(nil),    // 1: nodeum.micro.v1.ShowLicenseRequest
	(*ShowLicenseResponse)(nil),   // 2: nodeum.micro.v1.ShowLicenseResponse
	(*UpdateLicenseRequest)(nil),  // 3: nodeum.micro.v1.UpdateLicenseRequest
	(*UpdateLicenseResponse)(nil), // 4: nodeum.micro.v1.UpdateLicenseResponse
	(*timestamppb.Timestamp)(nil), // 5: google.protobuf.Timestamp
}
var file_nodeum_micro_v1_license_proto_depIdxs = []int32{
	5, // 0: nodeum.micro.v1.License.expires_at:type_name -> google.protobuf.Timestamp
	5, // 1: nodeum.micro.v1.License.not_before:type_name -> google.protobuf.Timestamp
	5, // 2: nodeum.micro.v1.License.issued_at:type_name -> google.protobuf.Timestamp
	5, // 3: nodeum.micro.v1.License.maintenance:type_name -> google.protobuf.Timestamp
	0, // 4: nodeum.micro.v1.ShowLicenseResponse.license:type_name -> nodeum.micro.v1.License
	0, // 5: nodeum.micro.v1.UpdateLicenseResponse.license:type_name -> nodeum.micro.v1.License
	1, // 6: nodeum.micro.v1.LicenseService.ShowLicense:input_type -> nodeum.micro.v1.ShowLicenseRequest
	3, // 7: nodeum.micro.v1.LicenseService.UpdateLicense:input_type -> nodeum.micro.v1.UpdateLicenseRequest
	2, // 8: nodeum.micro.v1.LicenseService.ShowLicense:output_type -> nodeum.micro.v1.ShowLicenseResponse
	4, // 9: nodeum.micro.v1.LicenseService.UpdateLicense:output_type -> nodeum.micro.v1.UpdateLicenseResponse
	8, // [8:10] is the sub-list for method output_type
	6, // [6:8] is the sub-list for method input_type
	6, // [6:6] is the sub-list for extension type_name
	6, // [6:6] is the sub-list for extension extendee
	0, // [0:6] is the sub-list for field type_name
}

func init() { file_nodeum_micro_v1_license_proto_init() }
func file_nodeum_micro_v1_license_proto_init() {
	if File_nodeum_micro_v1_license_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_nodeum_micro_v1_license_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*License); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeum_micro_v1_license_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowLicenseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeum_micro_v1_license_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShowLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeum_micro_v1_license_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLicenseRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_nodeum_micro_v1_license_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateLicenseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_nodeum_micro_v1_license_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_nodeum_micro_v1_license_proto_goTypes,
		DependencyIndexes: file_nodeum_micro_v1_license_proto_depIdxs,
		MessageInfos:      file_nodeum_micro_v1_license_proto_msgTypes,
	}.Build()
	File_nodeum_micro_v1_license_proto = out.File
	file_nodeum_micro_v1_license_proto_rawDesc = nil
	file_nodeum_micro_v1_license_proto_goTypes = nil
	file_nodeum_micro_v1_license_proto_depIdxs = nil
}
